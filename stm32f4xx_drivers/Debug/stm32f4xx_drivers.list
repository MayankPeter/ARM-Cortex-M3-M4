
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008e4  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a90  08000a98  00010a98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a90  08000a90  00010a98  2**0
                  CONTENTS
  4 .ARM          00000000  08000a90  08000a90  00010a98  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a90  08000a98  00010a98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a90  08000a90  00010a90  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a94  08000a94  00010a94  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a98  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a98  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010a98  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b63  00000000  00000000  00010ac2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002a4  00000000  00000000  00011625  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000118d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00011998  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000013fd  00000000  00000000  00011a38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000f56  00000000  00000000  00012e35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005ca2  00000000  00000000  00013d8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00019a2d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000268  00000000  00000000  00019a80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000a78 	.word	0x08000a78

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	08000a78 	.word	0x08000a78

080001ec <main>:
{
	for(uint32_t i = 0; i < value; i++);
}

int main()
{
 80001ec:	b580      	push	{r7, lr}
 80001ee:	b08e      	sub	sp, #56	; 0x38
 80001f0:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;
	GPIO_Handle_t GpioBlueButton;

	GpioLed.pGPIOx = GPIOG;
 80001f2:	4b19      	ldr	r3, [pc, #100]	; (8000258 <main+0x6c>)
 80001f4:	61fb      	str	r3, [r7, #28]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001f6:	2301      	movs	r3, #1
 80001f8:	627b      	str	r3, [r7, #36]	; 0x24
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80001fa:	230d      	movs	r3, #13
 80001fc:	623b      	str	r3, [r7, #32]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80001fe:	2300      	movs	r3, #0
 8000200:	62bb      	str	r3, [r7, #40]	; 0x28
	GpioLed.GPIO_PinConfig.GPIO_PinOType = GPIO_OP_TYPE_PP;
 8000202:	2300      	movs	r3, #0
 8000204:	633b      	str	r3, [r7, #48]	; 0x30
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000206:	2300      	movs	r3, #0
 8000208:	62fb      	str	r3, [r7, #44]	; 0x2c

	GpioBlueButton.pGPIOx = GPIOA;
 800020a:	4b14      	ldr	r3, [pc, #80]	; (800025c <main+0x70>)
 800020c:	603b      	str	r3, [r7, #0]
	GpioBlueButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 800020e:	2304      	movs	r3, #4
 8000210:	60bb      	str	r3, [r7, #8]
	GpioBlueButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000212:	2300      	movs	r3, #0
 8000214:	607b      	str	r3, [r7, #4]
	GpioBlueButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000216:	2302      	movs	r3, #2
 8000218:	60fb      	str	r3, [r7, #12]
	GpioBlueButton.GPIO_PinConfig.GPIO_PinOType = GPIO_OP_TYPE_PP;
 800021a:	2300      	movs	r3, #0
 800021c:	617b      	str	r3, [r7, #20]
	GpioBlueButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	613b      	str	r3, [r7, #16]

    GPIO_PeriClockControl(GPIOG, ENABLE);
 8000222:	2101      	movs	r1, #1
 8000224:	480c      	ldr	r0, [pc, #48]	; (8000258 <main+0x6c>)
 8000226:	f000 f853 	bl	80002d0 <GPIO_PeriClockControl>
    GPIO_PeriClockControl(GPIOA, ENABLE);
 800022a:	2101      	movs	r1, #1
 800022c:	480b      	ldr	r0, [pc, #44]	; (800025c <main+0x70>)
 800022e:	f000 f84f 	bl	80002d0 <GPIO_PeriClockControl>
    GPIO_Init(&GpioLed);
 8000232:	f107 031c 	add.w	r3, r7, #28
 8000236:	4618      	mov	r0, r3
 8000238:	f000 f966 	bl	8000508 <GPIO_Init>
    GPIO_Init(&GpioBlueButton);
 800023c:	463b      	mov	r3, r7
 800023e:	4618      	mov	r0, r3
 8000240:	f000 f962 	bl	8000508 <GPIO_Init>

    GPIO_IRQPriorityConfig(IRQ_NO_EXTI0, 15);
 8000244:	210f      	movs	r1, #15
 8000246:	2006      	movs	r0, #6
 8000248:	f000 fba8 	bl	800099c <GPIO_IRQPriorityConfig>
    GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 800024c:	2101      	movs	r1, #1
 800024e:	2006      	movs	r0, #6
 8000250:	f000 fb20 	bl	8000894 <GPIO_IRQInterruptConfig>

    while(1)
 8000254:	e7fe      	b.n	8000254 <main+0x68>
 8000256:	bf00      	nop
 8000258:	40021800 	.word	0x40021800
 800025c:	40020000 	.word	0x40020000

08000260 <EXTI0_IRQHandler>:

    return 0;
}

void EXTI0_IRQHandler(void)
{
 8000260:	b580      	push	{r7, lr}
 8000262:	af00      	add	r7, sp, #0
	//handle the GPIO interrupt
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 8000264:	2000      	movs	r0, #0
 8000266:	f000 fbc3 	bl	80009f0 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOG, GPIO_PIN_NO_13);
 800026a:	210d      	movs	r1, #13
 800026c:	4802      	ldr	r0, [pc, #8]	; (8000278 <EXTI0_IRQHandler+0x18>)
 800026e:	f000 fafd 	bl	800086c <GPIO_ToggleOutputPin>
}
 8000272:	bf00      	nop
 8000274:	bd80      	pop	{r7, pc}
 8000276:	bf00      	nop
 8000278:	40021800 	.word	0x40021800

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	; (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000280:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000284:	480c      	ldr	r0, [pc, #48]	; (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000286:	490d      	ldr	r1, [pc, #52]	; (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000288:	4a0d      	ldr	r2, [pc, #52]	; (80002c0 <LoopForever+0xe>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800028c:	e002      	b.n	8000294 <LoopCopyDataInit>

0800028e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000290:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000292:	3304      	adds	r3, #4

08000294 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000294:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000296:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000298:	d3f9      	bcc.n	800028e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800029a:	4a0a      	ldr	r2, [pc, #40]	; (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800029c:	4c0a      	ldr	r4, [pc, #40]	; (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a0:	e001      	b.n	80002a6 <LoopFillZerobss>

080002a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a4:	3204      	adds	r2, #4

080002a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a8:	d3fb      	bcc.n	80002a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 fbc1 	bl	8000a30 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ff9d 	bl	80001ec <main>

080002b2 <LoopForever>:

LoopForever:
    b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002c0:	08000a98 	.word	0x08000a98
  ldr r2, =_sbss
 80002c4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c8:	2000001c 	.word	0x2000001c

080002cc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC_IRQHandler>
	...

080002d0 <GPIO_PeriClockControl>:
/*
 * Peripheral Clock Setup
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b083      	sub	sp, #12
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
 80002d8:	460b      	mov	r3, r1
 80002da:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80002dc:	78fb      	ldrb	r3, [r7, #3]
 80002de:	2b01      	cmp	r3, #1
 80002e0:	d179      	bne.n	80003d6 <GPIO_PeriClockControl+0x106>
	{
		if	   (pGPIOx == GPIOA){ GPIOA_PCLK_EN(); }
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	4a7c      	ldr	r2, [pc, #496]	; (80004d8 <GPIO_PeriClockControl+0x208>)
 80002e6:	4293      	cmp	r3, r2
 80002e8:	d106      	bne.n	80002f8 <GPIO_PeriClockControl+0x28>
 80002ea:	4b7c      	ldr	r3, [pc, #496]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80002ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ee:	4a7b      	ldr	r2, [pc, #492]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80002f0:	f043 0301 	orr.w	r3, r3, #1
 80002f4:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOH){ GPIOH_PCLK_DI(); }
		else if(pGPIOx == GPIOI){ GPIOI_PCLK_DI(); }
		else if(pGPIOx == GPIOJ){ GPIOJ_PCLK_DI(); }
		else if(pGPIOx == GPIOK){ GPIOK_PCLK_DI(); }
	}
}
 80002f6:	e0e9      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOB){ GPIOB_PCLK_EN(); }
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	4a79      	ldr	r2, [pc, #484]	; (80004e0 <GPIO_PeriClockControl+0x210>)
 80002fc:	4293      	cmp	r3, r2
 80002fe:	d106      	bne.n	800030e <GPIO_PeriClockControl+0x3e>
 8000300:	4b76      	ldr	r3, [pc, #472]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000304:	4a75      	ldr	r2, [pc, #468]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000306:	f043 0302 	orr.w	r3, r3, #2
 800030a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030c:	e0de      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOC){ GPIOC_PCLK_EN(); }
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4a74      	ldr	r2, [pc, #464]	; (80004e4 <GPIO_PeriClockControl+0x214>)
 8000312:	4293      	cmp	r3, r2
 8000314:	d106      	bne.n	8000324 <GPIO_PeriClockControl+0x54>
 8000316:	4b71      	ldr	r3, [pc, #452]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000318:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800031a:	4a70      	ldr	r2, [pc, #448]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800031c:	f043 0304 	orr.w	r3, r3, #4
 8000320:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000322:	e0d3      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOD){ GPIOD_PCLK_EN(); }
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	4a70      	ldr	r2, [pc, #448]	; (80004e8 <GPIO_PeriClockControl+0x218>)
 8000328:	4293      	cmp	r3, r2
 800032a:	d106      	bne.n	800033a <GPIO_PeriClockControl+0x6a>
 800032c:	4b6b      	ldr	r3, [pc, #428]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800032e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000330:	4a6a      	ldr	r2, [pc, #424]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000332:	f043 0308 	orr.w	r3, r3, #8
 8000336:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000338:	e0c8      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOE){ GPIOE_PCLK_EN(); }
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4a6b      	ldr	r2, [pc, #428]	; (80004ec <GPIO_PeriClockControl+0x21c>)
 800033e:	4293      	cmp	r3, r2
 8000340:	d106      	bne.n	8000350 <GPIO_PeriClockControl+0x80>
 8000342:	4b66      	ldr	r3, [pc, #408]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000344:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000346:	4a65      	ldr	r2, [pc, #404]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000348:	f043 0310 	orr.w	r3, r3, #16
 800034c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034e:	e0bd      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOF){ GPIOF_PCLK_EN(); }
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a67      	ldr	r2, [pc, #412]	; (80004f0 <GPIO_PeriClockControl+0x220>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d106      	bne.n	8000366 <GPIO_PeriClockControl+0x96>
 8000358:	4b60      	ldr	r3, [pc, #384]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800035a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035c:	4a5f      	ldr	r2, [pc, #380]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800035e:	f043 0320 	orr.w	r3, r3, #32
 8000362:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000364:	e0b2      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOG){ GPIOG_PCLK_EN(); }
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	4a62      	ldr	r2, [pc, #392]	; (80004f4 <GPIO_PeriClockControl+0x224>)
 800036a:	4293      	cmp	r3, r2
 800036c:	d106      	bne.n	800037c <GPIO_PeriClockControl+0xac>
 800036e:	4b5b      	ldr	r3, [pc, #364]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000372:	4a5a      	ldr	r2, [pc, #360]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000374:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000378:	6313      	str	r3, [r2, #48]	; 0x30
}
 800037a:	e0a7      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOH){ GPIOH_PCLK_EN(); }
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	4a5e      	ldr	r2, [pc, #376]	; (80004f8 <GPIO_PeriClockControl+0x228>)
 8000380:	4293      	cmp	r3, r2
 8000382:	d106      	bne.n	8000392 <GPIO_PeriClockControl+0xc2>
 8000384:	4b55      	ldr	r3, [pc, #340]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000386:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000388:	4a54      	ldr	r2, [pc, #336]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800038a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800038e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000390:	e09c      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOI){ GPIOI_PCLK_EN(); }
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	4a59      	ldr	r2, [pc, #356]	; (80004fc <GPIO_PeriClockControl+0x22c>)
 8000396:	4293      	cmp	r3, r2
 8000398:	d106      	bne.n	80003a8 <GPIO_PeriClockControl+0xd8>
 800039a:	4b50      	ldr	r3, [pc, #320]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800039c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800039e:	4a4f      	ldr	r2, [pc, #316]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003a0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003a6:	e091      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOJ){ GPIOJ_PCLK_EN(); }
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	4a55      	ldr	r2, [pc, #340]	; (8000500 <GPIO_PeriClockControl+0x230>)
 80003ac:	4293      	cmp	r3, r2
 80003ae:	d106      	bne.n	80003be <GPIO_PeriClockControl+0xee>
 80003b0:	4b4a      	ldr	r3, [pc, #296]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003b4:	4a49      	ldr	r2, [pc, #292]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80003ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003bc:	e086      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOK){ GPIOK_PCLK_EN(); }
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a50      	ldr	r2, [pc, #320]	; (8000504 <GPIO_PeriClockControl+0x234>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	f040 8082 	bne.w	80004cc <GPIO_PeriClockControl+0x1fc>
 80003c8:	4b44      	ldr	r3, [pc, #272]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003cc:	4a43      	ldr	r2, [pc, #268]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003ce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80003d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d4:	e07a      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
	else if(EnorDi == DISABLE)
 80003d6:	78fb      	ldrb	r3, [r7, #3]
 80003d8:	2b00      	cmp	r3, #0
 80003da:	d177      	bne.n	80004cc <GPIO_PeriClockControl+0x1fc>
		if	   (pGPIOx == GPIOA){ GPIOA_PCLK_DI(); }
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	4a3e      	ldr	r2, [pc, #248]	; (80004d8 <GPIO_PeriClockControl+0x208>)
 80003e0:	4293      	cmp	r3, r2
 80003e2:	d106      	bne.n	80003f2 <GPIO_PeriClockControl+0x122>
 80003e4:	4b3d      	ldr	r3, [pc, #244]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e8:	4a3c      	ldr	r2, [pc, #240]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003ea:	f023 0301 	bic.w	r3, r3, #1
 80003ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f0:	e06c      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOB){ GPIOB_PCLK_DI(); }
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4a3a      	ldr	r2, [pc, #232]	; (80004e0 <GPIO_PeriClockControl+0x210>)
 80003f6:	4293      	cmp	r3, r2
 80003f8:	d106      	bne.n	8000408 <GPIO_PeriClockControl+0x138>
 80003fa:	4b38      	ldr	r3, [pc, #224]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80003fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fe:	4a37      	ldr	r2, [pc, #220]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000400:	f023 0302 	bic.w	r3, r3, #2
 8000404:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000406:	e061      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOC){ GPIOC_PCLK_DI(); }
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	4a36      	ldr	r2, [pc, #216]	; (80004e4 <GPIO_PeriClockControl+0x214>)
 800040c:	4293      	cmp	r3, r2
 800040e:	d106      	bne.n	800041e <GPIO_PeriClockControl+0x14e>
 8000410:	4b32      	ldr	r3, [pc, #200]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000414:	4a31      	ldr	r2, [pc, #196]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000416:	f023 0304 	bic.w	r3, r3, #4
 800041a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041c:	e056      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOD){ GPIOD_PCLK_DI(); }
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4a31      	ldr	r2, [pc, #196]	; (80004e8 <GPIO_PeriClockControl+0x218>)
 8000422:	4293      	cmp	r3, r2
 8000424:	d106      	bne.n	8000434 <GPIO_PeriClockControl+0x164>
 8000426:	4b2d      	ldr	r3, [pc, #180]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000428:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800042a:	4a2c      	ldr	r2, [pc, #176]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800042c:	f023 0308 	bic.w	r3, r3, #8
 8000430:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000432:	e04b      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOE){ GPIOE_PCLK_DI(); }
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	4a2d      	ldr	r2, [pc, #180]	; (80004ec <GPIO_PeriClockControl+0x21c>)
 8000438:	4293      	cmp	r3, r2
 800043a:	d106      	bne.n	800044a <GPIO_PeriClockControl+0x17a>
 800043c:	4b27      	ldr	r3, [pc, #156]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800043e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000440:	4a26      	ldr	r2, [pc, #152]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000442:	f023 0310 	bic.w	r3, r3, #16
 8000446:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000448:	e040      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOF){ GPIOF_PCLK_DI(); }
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	4a28      	ldr	r2, [pc, #160]	; (80004f0 <GPIO_PeriClockControl+0x220>)
 800044e:	4293      	cmp	r3, r2
 8000450:	d106      	bne.n	8000460 <GPIO_PeriClockControl+0x190>
 8000452:	4b22      	ldr	r3, [pc, #136]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000456:	4a21      	ldr	r2, [pc, #132]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000458:	f023 0320 	bic.w	r3, r3, #32
 800045c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045e:	e035      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOG){ GPIOG_PCLK_DI(); }
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	4a24      	ldr	r2, [pc, #144]	; (80004f4 <GPIO_PeriClockControl+0x224>)
 8000464:	4293      	cmp	r3, r2
 8000466:	d106      	bne.n	8000476 <GPIO_PeriClockControl+0x1a6>
 8000468:	4b1c      	ldr	r3, [pc, #112]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800046a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046c:	4a1b      	ldr	r2, [pc, #108]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800046e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000472:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000474:	e02a      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOH){ GPIOH_PCLK_DI(); }
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	4a1f      	ldr	r2, [pc, #124]	; (80004f8 <GPIO_PeriClockControl+0x228>)
 800047a:	4293      	cmp	r3, r2
 800047c:	d106      	bne.n	800048c <GPIO_PeriClockControl+0x1bc>
 800047e:	4b17      	ldr	r3, [pc, #92]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000480:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000482:	4a16      	ldr	r2, [pc, #88]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000484:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000488:	6313      	str	r3, [r2, #48]	; 0x30
}
 800048a:	e01f      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOI){ GPIOI_PCLK_DI(); }
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	4a1b      	ldr	r2, [pc, #108]	; (80004fc <GPIO_PeriClockControl+0x22c>)
 8000490:	4293      	cmp	r3, r2
 8000492:	d106      	bne.n	80004a2 <GPIO_PeriClockControl+0x1d2>
 8000494:	4b11      	ldr	r3, [pc, #68]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 8000496:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000498:	4a10      	ldr	r2, [pc, #64]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 800049a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800049e:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a0:	e014      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOJ){ GPIOJ_PCLK_DI(); }
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	4a16      	ldr	r2, [pc, #88]	; (8000500 <GPIO_PeriClockControl+0x230>)
 80004a6:	4293      	cmp	r3, r2
 80004a8:	d106      	bne.n	80004b8 <GPIO_PeriClockControl+0x1e8>
 80004aa:	4b0c      	ldr	r3, [pc, #48]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80004ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ae:	4a0b      	ldr	r2, [pc, #44]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80004b0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80004b4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004b6:	e009      	b.n	80004cc <GPIO_PeriClockControl+0x1fc>
		else if(pGPIOx == GPIOK){ GPIOK_PCLK_DI(); }
 80004b8:	687b      	ldr	r3, [r7, #4]
 80004ba:	4a12      	ldr	r2, [pc, #72]	; (8000504 <GPIO_PeriClockControl+0x234>)
 80004bc:	4293      	cmp	r3, r2
 80004be:	d105      	bne.n	80004cc <GPIO_PeriClockControl+0x1fc>
 80004c0:	4b06      	ldr	r3, [pc, #24]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80004c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004c4:	4a05      	ldr	r2, [pc, #20]	; (80004dc <GPIO_PeriClockControl+0x20c>)
 80004c6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80004ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004cc:	bf00      	nop
 80004ce:	370c      	adds	r7, #12
 80004d0:	46bd      	mov	sp, r7
 80004d2:	bc80      	pop	{r7}
 80004d4:	4770      	bx	lr
 80004d6:	bf00      	nop
 80004d8:	40020000 	.word	0x40020000
 80004dc:	40023800 	.word	0x40023800
 80004e0:	40020400 	.word	0x40020400
 80004e4:	40020800 	.word	0x40020800
 80004e8:	40020c00 	.word	0x40020c00
 80004ec:	40021000 	.word	0x40021000
 80004f0:	40021400 	.word	0x40021400
 80004f4:	40021800 	.word	0x40021800
 80004f8:	40021c00 	.word	0x40021c00
 80004fc:	40022000 	.word	0x40022000
 8000500:	40022400 	.word	0x40022400
 8000504:	40022800 	.word	0x40022800

08000508 <GPIO_Init>:
/*
 * Peripheral Init & De-Init
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000508:	b480      	push	{r7}
 800050a:	b087      	sub	sp, #28
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000510:	2300      	movs	r3, #0
 8000512:	617b      	str	r3, [r7, #20]

// 1) Configure Mode
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	689b      	ldr	r3, [r3, #8]
 8000518:	2b03      	cmp	r3, #3
 800051a:	d81e      	bhi.n	800055a <GPIO_Init+0x52>
	{
		/* For Non-Interrupt Mode */
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	689a      	ldr	r2, [r3, #8]
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	685b      	ldr	r3, [r3, #4]
 8000524:	005b      	lsls	r3, r3, #1
 8000526:	fa02 f303 	lsl.w	r3, r2, r3
 800052a:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 800052c:	687b      	ldr	r3, [r7, #4]
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	681a      	ldr	r2, [r3, #0]
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	685b      	ldr	r3, [r3, #4]
 8000536:	2103      	movs	r1, #3
 8000538:	fa01 f303 	lsl.w	r3, r1, r3
 800053c:	43db      	mvns	r3, r3
 800053e:	4619      	mov	r1, r3
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	681b      	ldr	r3, [r3, #0]
 8000544:	400a      	ands	r2, r1
 8000546:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //Setting
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	681b      	ldr	r3, [r3, #0]
 800054c:	6819      	ldr	r1, [r3, #0]
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	697a      	ldr	r2, [r7, #20]
 8000554:	430a      	orrs	r2, r1
 8000556:	601a      	str	r2, [r3, #0]
 8000558:	e0e4      	b.n	8000724 <GPIO_Init+0x21c>
	}else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT)
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	689b      	ldr	r3, [r3, #8]
 800055e:	2b04      	cmp	r3, #4
 8000560:	d817      	bhi.n	8000592 <GPIO_Init+0x8a>
		{
			//set falling trigger
			EXTI->FTSR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000562:	4b52      	ldr	r3, [pc, #328]	; (80006ac <GPIO_Init+0x1a4>)
 8000564:	68db      	ldr	r3, [r3, #12]
 8000566:	687a      	ldr	r2, [r7, #4]
 8000568:	6852      	ldr	r2, [r2, #4]
 800056a:	2101      	movs	r1, #1
 800056c:	fa01 f202 	lsl.w	r2, r1, r2
 8000570:	4611      	mov	r1, r2
 8000572:	4a4e      	ldr	r2, [pc, #312]	; (80006ac <GPIO_Init+0x1a4>)
 8000574:	430b      	orrs	r3, r1
 8000576:	60d3      	str	r3, [r2, #12]
			//clear rising trigger just precaution
			EXTI->RTSR &= ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000578:	4b4c      	ldr	r3, [pc, #304]	; (80006ac <GPIO_Init+0x1a4>)
 800057a:	689b      	ldr	r3, [r3, #8]
 800057c:	687a      	ldr	r2, [r7, #4]
 800057e:	6852      	ldr	r2, [r2, #4]
 8000580:	2101      	movs	r1, #1
 8000582:	fa01 f202 	lsl.w	r2, r1, r2
 8000586:	43d2      	mvns	r2, r2
 8000588:	4611      	mov	r1, r2
 800058a:	4a48      	ldr	r2, [pc, #288]	; (80006ac <GPIO_Init+0x1a4>)
 800058c:	400b      	ands	r3, r1
 800058e:	6093      	str	r3, [r2, #8]
 8000590:	e035      	b.n	80005fe <GPIO_Init+0xf6>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT)
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	689b      	ldr	r3, [r3, #8]
 8000596:	2b05      	cmp	r3, #5
 8000598:	d817      	bhi.n	80005ca <GPIO_Init+0xc2>
		{
			//set rinsing trigger
			EXTI->RTSR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800059a:	4b44      	ldr	r3, [pc, #272]	; (80006ac <GPIO_Init+0x1a4>)
 800059c:	689b      	ldr	r3, [r3, #8]
 800059e:	687a      	ldr	r2, [r7, #4]
 80005a0:	6852      	ldr	r2, [r2, #4]
 80005a2:	2101      	movs	r1, #1
 80005a4:	fa01 f202 	lsl.w	r2, r1, r2
 80005a8:	4611      	mov	r1, r2
 80005aa:	4a40      	ldr	r2, [pc, #256]	; (80006ac <GPIO_Init+0x1a4>)
 80005ac:	430b      	orrs	r3, r1
 80005ae:	6093      	str	r3, [r2, #8]
			//clear falling trigger just precaution
			EXTI->FTSR &= ~(1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005b0:	4b3e      	ldr	r3, [pc, #248]	; (80006ac <GPIO_Init+0x1a4>)
 80005b2:	68db      	ldr	r3, [r3, #12]
 80005b4:	687a      	ldr	r2, [r7, #4]
 80005b6:	6852      	ldr	r2, [r2, #4]
 80005b8:	2101      	movs	r1, #1
 80005ba:	fa01 f202 	lsl.w	r2, r1, r2
 80005be:	43d2      	mvns	r2, r2
 80005c0:	4611      	mov	r1, r2
 80005c2:	4a3a      	ldr	r2, [pc, #232]	; (80006ac <GPIO_Init+0x1a4>)
 80005c4:	400b      	ands	r3, r1
 80005c6:	60d3      	str	r3, [r2, #12]
 80005c8:	e019      	b.n	80005fe <GPIO_Init+0xf6>


		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT)
 80005ca:	687b      	ldr	r3, [r7, #4]
 80005cc:	689b      	ldr	r3, [r3, #8]
 80005ce:	2b06      	cmp	r3, #6
 80005d0:	d815      	bhi.n	80005fe <GPIO_Init+0xf6>
		{
			//set rinsing and falling trigger
			EXTI->RTSR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005d2:	4b36      	ldr	r3, [pc, #216]	; (80006ac <GPIO_Init+0x1a4>)
 80005d4:	689b      	ldr	r3, [r3, #8]
 80005d6:	687a      	ldr	r2, [r7, #4]
 80005d8:	6852      	ldr	r2, [r2, #4]
 80005da:	2101      	movs	r1, #1
 80005dc:	fa01 f202 	lsl.w	r2, r1, r2
 80005e0:	4611      	mov	r1, r2
 80005e2:	4a32      	ldr	r2, [pc, #200]	; (80006ac <GPIO_Init+0x1a4>)
 80005e4:	430b      	orrs	r3, r1
 80005e6:	6093      	str	r3, [r2, #8]
			EXTI->FTSR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005e8:	4b30      	ldr	r3, [pc, #192]	; (80006ac <GPIO_Init+0x1a4>)
 80005ea:	68db      	ldr	r3, [r3, #12]
 80005ec:	687a      	ldr	r2, [r7, #4]
 80005ee:	6852      	ldr	r2, [r2, #4]
 80005f0:	2101      	movs	r1, #1
 80005f2:	fa01 f202 	lsl.w	r2, r1, r2
 80005f6:	4611      	mov	r1, r2
 80005f8:	4a2c      	ldr	r2, [pc, #176]	; (80006ac <GPIO_Init+0x1a4>)
 80005fa:	430b      	orrs	r3, r1
 80005fc:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) / 4;
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	685b      	ldr	r3, [r3, #4]
 8000602:	089b      	lsrs	r3, r3, #2
 8000604:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) % 4;
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	685b      	ldr	r3, [r3, #4]
 800060a:	b2db      	uxtb	r3, r3
 800060c:	f003 0303 	and.w	r3, r3, #3
 8000610:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	4a26      	ldr	r2, [pc, #152]	; (80006b0 <GPIO_Init+0x1a8>)
 8000618:	4293      	cmp	r3, r2
 800061a:	d05f      	beq.n	80006dc <GPIO_Init+0x1d4>
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	4a24      	ldr	r2, [pc, #144]	; (80006b4 <GPIO_Init+0x1ac>)
 8000622:	4293      	cmp	r3, r2
 8000624:	d040      	beq.n	80006a8 <GPIO_Init+0x1a0>
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	4a23      	ldr	r2, [pc, #140]	; (80006b8 <GPIO_Init+0x1b0>)
 800062c:	4293      	cmp	r3, r2
 800062e:	d039      	beq.n	80006a4 <GPIO_Init+0x19c>
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	4a21      	ldr	r2, [pc, #132]	; (80006bc <GPIO_Init+0x1b4>)
 8000636:	4293      	cmp	r3, r2
 8000638:	d032      	beq.n	80006a0 <GPIO_Init+0x198>
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	4a20      	ldr	r2, [pc, #128]	; (80006c0 <GPIO_Init+0x1b8>)
 8000640:	4293      	cmp	r3, r2
 8000642:	d02b      	beq.n	800069c <GPIO_Init+0x194>
 8000644:	687b      	ldr	r3, [r7, #4]
 8000646:	681b      	ldr	r3, [r3, #0]
 8000648:	4a1e      	ldr	r2, [pc, #120]	; (80006c4 <GPIO_Init+0x1bc>)
 800064a:	4293      	cmp	r3, r2
 800064c:	d024      	beq.n	8000698 <GPIO_Init+0x190>
 800064e:	687b      	ldr	r3, [r7, #4]
 8000650:	681b      	ldr	r3, [r3, #0]
 8000652:	4a1d      	ldr	r2, [pc, #116]	; (80006c8 <GPIO_Init+0x1c0>)
 8000654:	4293      	cmp	r3, r2
 8000656:	d01d      	beq.n	8000694 <GPIO_Init+0x18c>
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	681b      	ldr	r3, [r3, #0]
 800065c:	4a1b      	ldr	r2, [pc, #108]	; (80006cc <GPIO_Init+0x1c4>)
 800065e:	4293      	cmp	r3, r2
 8000660:	d016      	beq.n	8000690 <GPIO_Init+0x188>
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	4a1a      	ldr	r2, [pc, #104]	; (80006d0 <GPIO_Init+0x1c8>)
 8000668:	4293      	cmp	r3, r2
 800066a:	d00f      	beq.n	800068c <GPIO_Init+0x184>
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	4a18      	ldr	r2, [pc, #96]	; (80006d4 <GPIO_Init+0x1cc>)
 8000672:	4293      	cmp	r3, r2
 8000674:	d008      	beq.n	8000688 <GPIO_Init+0x180>
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	681b      	ldr	r3, [r3, #0]
 800067a:	4a17      	ldr	r2, [pc, #92]	; (80006d8 <GPIO_Init+0x1d0>)
 800067c:	4293      	cmp	r3, r2
 800067e:	d101      	bne.n	8000684 <GPIO_Init+0x17c>
 8000680:	230a      	movs	r3, #10
 8000682:	e02c      	b.n	80006de <GPIO_Init+0x1d6>
 8000684:	2300      	movs	r3, #0
 8000686:	e02a      	b.n	80006de <GPIO_Init+0x1d6>
 8000688:	2309      	movs	r3, #9
 800068a:	e028      	b.n	80006de <GPIO_Init+0x1d6>
 800068c:	2308      	movs	r3, #8
 800068e:	e026      	b.n	80006de <GPIO_Init+0x1d6>
 8000690:	2307      	movs	r3, #7
 8000692:	e024      	b.n	80006de <GPIO_Init+0x1d6>
 8000694:	2306      	movs	r3, #6
 8000696:	e022      	b.n	80006de <GPIO_Init+0x1d6>
 8000698:	2305      	movs	r3, #5
 800069a:	e020      	b.n	80006de <GPIO_Init+0x1d6>
 800069c:	2304      	movs	r3, #4
 800069e:	e01e      	b.n	80006de <GPIO_Init+0x1d6>
 80006a0:	2303      	movs	r3, #3
 80006a2:	e01c      	b.n	80006de <GPIO_Init+0x1d6>
 80006a4:	2302      	movs	r3, #2
 80006a6:	e01a      	b.n	80006de <GPIO_Init+0x1d6>
 80006a8:	2301      	movs	r3, #1
 80006aa:	e018      	b.n	80006de <GPIO_Init+0x1d6>
 80006ac:	40013c00 	.word	0x40013c00
 80006b0:	40020000 	.word	0x40020000
 80006b4:	40020400 	.word	0x40020400
 80006b8:	40020800 	.word	0x40020800
 80006bc:	40020c00 	.word	0x40020c00
 80006c0:	40021000 	.word	0x40021000
 80006c4:	40021400 	.word	0x40021400
 80006c8:	40021800 	.word	0x40021800
 80006cc:	40021c00 	.word	0x40021c00
 80006d0:	40022000 	.word	0x40022000
 80006d4:	40022400 	.word	0x40022400
 80006d8:	40022800 	.word	0x40022800
 80006dc:	2300      	movs	r3, #0
 80006de:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 80006e0:	4b5f      	ldr	r3, [pc, #380]	; (8000860 <GPIO_Init+0x358>)
 80006e2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006e4:	4a5e      	ldr	r2, [pc, #376]	; (8000860 <GPIO_Init+0x358>)
 80006e6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80006ea:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] |= (portcode << (temp2 * 4));
 80006ec:	4a5d      	ldr	r2, [pc, #372]	; (8000864 <GPIO_Init+0x35c>)
 80006ee:	7cfb      	ldrb	r3, [r7, #19]
 80006f0:	3302      	adds	r3, #2
 80006f2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006f6:	7c79      	ldrb	r1, [r7, #17]
 80006f8:	7cbb      	ldrb	r3, [r7, #18]
 80006fa:	009b      	lsls	r3, r3, #2
 80006fc:	fa01 f303 	lsl.w	r3, r1, r3
 8000700:	4618      	mov	r0, r3
 8000702:	4958      	ldr	r1, [pc, #352]	; (8000864 <GPIO_Init+0x35c>)
 8000704:	7cfb      	ldrb	r3, [r7, #19]
 8000706:	4302      	orrs	r2, r0
 8000708:	3302      	adds	r3, #2
 800070a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800070e:	4b56      	ldr	r3, [pc, #344]	; (8000868 <GPIO_Init+0x360>)
 8000710:	681b      	ldr	r3, [r3, #0]
 8000712:	687a      	ldr	r2, [r7, #4]
 8000714:	6852      	ldr	r2, [r2, #4]
 8000716:	2101      	movs	r1, #1
 8000718:	fa01 f202 	lsl.w	r2, r1, r2
 800071c:	4611      	mov	r1, r2
 800071e:	4a52      	ldr	r2, [pc, #328]	; (8000868 <GPIO_Init+0x360>)
 8000720:	430b      	orrs	r3, r1
 8000722:	6013      	str	r3, [r2, #0]
	}

// 2) Configure Speed
	 temp = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	617b      	str	r3, [r7, #20]
	 temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	68da      	ldr	r2, [r3, #12]
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	685b      	ldr	r3, [r3, #4]
 8000730:	005b      	lsls	r3, r3, #1
 8000732:	fa02 f303 	lsl.w	r3, r2, r3
 8000736:	617b      	str	r3, [r7, #20]
	 pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	681b      	ldr	r3, [r3, #0]
 800073c:	689a      	ldr	r2, [r3, #8]
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	685b      	ldr	r3, [r3, #4]
 8000742:	2103      	movs	r1, #3
 8000744:	fa01 f303 	lsl.w	r3, r1, r3
 8000748:	43db      	mvns	r3, r3
 800074a:	4619      	mov	r1, r3
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	400a      	ands	r2, r1
 8000752:	609a      	str	r2, [r3, #8]
	 pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	6899      	ldr	r1, [r3, #8]
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	697a      	ldr	r2, [r7, #20]
 8000760:	430a      	orrs	r2, r1
 8000762:	609a      	str	r2, [r3, #8]

// 3) PUPD Config
	 temp = 0;
 8000764:	2300      	movs	r3, #0
 8000766:	617b      	str	r3, [r7, #20]
	 temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	691a      	ldr	r2, [r3, #16]
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	685b      	ldr	r3, [r3, #4]
 8000770:	005b      	lsls	r3, r3, #1
 8000772:	fa02 f303 	lsl.w	r3, r2, r3
 8000776:	617b      	str	r3, [r7, #20]
	 pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 8000778:	687b      	ldr	r3, [r7, #4]
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	68da      	ldr	r2, [r3, #12]
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	685b      	ldr	r3, [r3, #4]
 8000782:	2103      	movs	r1, #3
 8000784:	fa01 f303 	lsl.w	r3, r1, r3
 8000788:	43db      	mvns	r3, r3
 800078a:	4619      	mov	r1, r3
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	400a      	ands	r2, r1
 8000792:	60da      	str	r2, [r3, #12]
	 pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	68d9      	ldr	r1, [r3, #12]
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	697a      	ldr	r2, [r7, #20]
 80007a0:	430a      	orrs	r2, r1
 80007a2:	60da      	str	r2, [r3, #12]

// 4) Output Type
	 temp = 0;
 80007a4:	2300      	movs	r3, #0
 80007a6:	617b      	str	r3, [r7, #20]
	 temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	695a      	ldr	r2, [r3, #20]
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	685b      	ldr	r3, [r3, #4]
 80007b0:	fa02 f303 	lsl.w	r3, r2, r3
 80007b4:	617b      	str	r3, [r7, #20]
	 pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //Clearing
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	685a      	ldr	r2, [r3, #4]
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	685b      	ldr	r3, [r3, #4]
 80007c0:	2101      	movs	r1, #1
 80007c2:	fa01 f303 	lsl.w	r3, r1, r3
 80007c6:	43db      	mvns	r3, r3
 80007c8:	4619      	mov	r1, r3
 80007ca:	687b      	ldr	r3, [r7, #4]
 80007cc:	681b      	ldr	r3, [r3, #0]
 80007ce:	400a      	ands	r2, r1
 80007d0:	605a      	str	r2, [r3, #4]
	 pGPIOHandle->pGPIOx->OTYPER |= temp;
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	681b      	ldr	r3, [r3, #0]
 80007d6:	6859      	ldr	r1, [r3, #4]
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	697a      	ldr	r2, [r7, #20]
 80007de:	430a      	orrs	r2, r1
 80007e0:	605a      	str	r2, [r3, #4]

// 5) Alternate Functionality for GPIO
	 if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80007e2:	687b      	ldr	r3, [r7, #4]
 80007e4:	689b      	ldr	r3, [r3, #8]
 80007e6:	2b02      	cmp	r3, #2
 80007e8:	d134      	bne.n	8000854 <GPIO_Init+0x34c>
	 {
		 uint8_t temp1 = 0, temp2 = 0;
 80007ea:	2300      	movs	r3, #0
 80007ec:	743b      	strb	r3, [r7, #16]
 80007ee:	2300      	movs	r3, #0
 80007f0:	73fb      	strb	r3, [r7, #15]
		 temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	685b      	ldr	r3, [r3, #4]
 80007f6:	08db      	lsrs	r3, r3, #3
 80007f8:	743b      	strb	r3, [r7, #16]
		 temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	685b      	ldr	r3, [r3, #4]
 80007fe:	b2db      	uxtb	r3, r3
 8000800:	f003 0307 	and.w	r3, r3, #7
 8000804:	73fb      	strb	r3, [r7, #15]
		 pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 * temp2)); //Clearing
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	681b      	ldr	r3, [r3, #0]
 800080a:	7c3a      	ldrb	r2, [r7, #16]
 800080c:	3208      	adds	r2, #8
 800080e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000812:	7bfb      	ldrb	r3, [r7, #15]
 8000814:	009b      	lsls	r3, r3, #2
 8000816:	220f      	movs	r2, #15
 8000818:	fa02 f303 	lsl.w	r3, r2, r3
 800081c:	43db      	mvns	r3, r3
 800081e:	4618      	mov	r0, r3
 8000820:	687b      	ldr	r3, [r7, #4]
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	7c3a      	ldrb	r2, [r7, #16]
 8000826:	4001      	ands	r1, r0
 8000828:	3208      	adds	r2, #8
 800082a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		 pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	681b      	ldr	r3, [r3, #0]
 8000832:	7c3a      	ldrb	r2, [r7, #16]
 8000834:	3208      	adds	r2, #8
 8000836:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800083a:	687b      	ldr	r3, [r7, #4]
 800083c:	699a      	ldr	r2, [r3, #24]
 800083e:	7bfb      	ldrb	r3, [r7, #15]
 8000840:	009b      	lsls	r3, r3, #2
 8000842:	fa02 f103 	lsl.w	r1, r2, r3
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	681b      	ldr	r3, [r3, #0]
 800084a:	7c3a      	ldrb	r2, [r7, #16]
 800084c:	4301      	orrs	r1, r0
 800084e:	3208      	adds	r2, #8
 8000850:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	 }
}
 8000854:	bf00      	nop
 8000856:	371c      	adds	r7, #28
 8000858:	46bd      	mov	sp, r7
 800085a:	bc80      	pop	{r7}
 800085c:	4770      	bx	lr
 800085e:	bf00      	nop
 8000860:	40023800 	.word	0x40023800
 8000864:	40013800 	.word	0x40013800
 8000868:	40013c00 	.word	0x40013c00

0800086c <GPIO_ToggleOutputPin>:
{
	pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800086c:	b480      	push	{r7}
 800086e:	b083      	sub	sp, #12
 8000870:	af00      	add	r7, sp, #0
 8000872:	6078      	str	r0, [r7, #4]
 8000874:	460b      	mov	r3, r1
 8000876:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	695b      	ldr	r3, [r3, #20]
 800087c:	78fa      	ldrb	r2, [r7, #3]
 800087e:	2101      	movs	r1, #1
 8000880:	fa01 f202 	lsl.w	r2, r1, r2
 8000884:	405a      	eors	r2, r3
 8000886:	687b      	ldr	r3, [r7, #4]
 8000888:	615a      	str	r2, [r3, #20]
}
 800088a:	bf00      	nop
 800088c:	370c      	adds	r7, #12
 800088e:	46bd      	mov	sp, r7
 8000890:	bc80      	pop	{r7}
 8000892:	4770      	bx	lr

08000894 <GPIO_IRQInterruptConfig>:
/*
 * Peripheral IRQ Config and ISR Handling
 */

void GPIO_IRQInterruptConfig(uint8_t IRQNumber,  uint8_t EnorDi)
{
 8000894:	b480      	push	{r7}
 8000896:	b083      	sub	sp, #12
 8000898:	af00      	add	r7, sp, #0
 800089a:	4603      	mov	r3, r0
 800089c:	460a      	mov	r2, r1
 800089e:	71fb      	strb	r3, [r7, #7]
 80008a0:	4613      	mov	r3, r2
 80008a2:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 80008a4:	79bb      	ldrb	r3, [r7, #6]
 80008a6:	2b01      	cmp	r3, #1
 80008a8:	d133      	bne.n	8000912 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	2b1f      	cmp	r3, #31
 80008ae:	d80a      	bhi.n	80008c6 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 Register
			*NVIC_ISER0 |= (1 << IRQNumber);
 80008b0:	4b34      	ldr	r3, [pc, #208]	; (8000984 <GPIO_IRQInterruptConfig+0xf0>)
 80008b2:	681b      	ldr	r3, [r3, #0]
 80008b4:	79fa      	ldrb	r2, [r7, #7]
 80008b6:	2101      	movs	r1, #1
 80008b8:	fa01 f202 	lsl.w	r2, r1, r2
 80008bc:	4611      	mov	r1, r2
 80008be:	4a31      	ldr	r2, [pc, #196]	; (8000984 <GPIO_IRQInterruptConfig+0xf0>)
 80008c0:	430b      	orrs	r3, r1
 80008c2:	6013      	str	r3, [r2, #0]
		{
			//program ISER2 Register
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 80008c4:	e059      	b.n	800097a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 80008c6:	79fb      	ldrb	r3, [r7, #7]
 80008c8:	2b1f      	cmp	r3, #31
 80008ca:	d90f      	bls.n	80008ec <GPIO_IRQInterruptConfig+0x58>
 80008cc:	79fb      	ldrb	r3, [r7, #7]
 80008ce:	2b3f      	cmp	r3, #63	; 0x3f
 80008d0:	d80c      	bhi.n	80008ec <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 80008d2:	4b2d      	ldr	r3, [pc, #180]	; (8000988 <GPIO_IRQInterruptConfig+0xf4>)
 80008d4:	681b      	ldr	r3, [r3, #0]
 80008d6:	79fa      	ldrb	r2, [r7, #7]
 80008d8:	f002 021f 	and.w	r2, r2, #31
 80008dc:	2101      	movs	r1, #1
 80008de:	fa01 f202 	lsl.w	r2, r1, r2
 80008e2:	4611      	mov	r1, r2
 80008e4:	4a28      	ldr	r2, [pc, #160]	; (8000988 <GPIO_IRQInterruptConfig+0xf4>)
 80008e6:	430b      	orrs	r3, r1
 80008e8:	6013      	str	r3, [r2, #0]
 80008ea:	e046      	b.n	800097a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 64 && IRQNumber < 96)
 80008ec:	79fb      	ldrb	r3, [r7, #7]
 80008ee:	2b40      	cmp	r3, #64	; 0x40
 80008f0:	d943      	bls.n	800097a <GPIO_IRQInterruptConfig+0xe6>
 80008f2:	79fb      	ldrb	r3, [r7, #7]
 80008f4:	2b5f      	cmp	r3, #95	; 0x5f
 80008f6:	d840      	bhi.n	800097a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 80008f8:	4b24      	ldr	r3, [pc, #144]	; (800098c <GPIO_IRQInterruptConfig+0xf8>)
 80008fa:	681b      	ldr	r3, [r3, #0]
 80008fc:	79fa      	ldrb	r2, [r7, #7]
 80008fe:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000902:	2101      	movs	r1, #1
 8000904:	fa01 f202 	lsl.w	r2, r1, r2
 8000908:	4611      	mov	r1, r2
 800090a:	4a20      	ldr	r2, [pc, #128]	; (800098c <GPIO_IRQInterruptConfig+0xf8>)
 800090c:	430b      	orrs	r3, r1
 800090e:	6013      	str	r3, [r2, #0]
}
 8000910:	e033      	b.n	800097a <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 8000912:	79fb      	ldrb	r3, [r7, #7]
 8000914:	2b1f      	cmp	r3, #31
 8000916:	d80a      	bhi.n	800092e <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= (1 << IRQNumber);
 8000918:	4b1d      	ldr	r3, [pc, #116]	; (8000990 <GPIO_IRQInterruptConfig+0xfc>)
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	79fa      	ldrb	r2, [r7, #7]
 800091e:	2101      	movs	r1, #1
 8000920:	fa01 f202 	lsl.w	r2, r1, r2
 8000924:	4611      	mov	r1, r2
 8000926:	4a1a      	ldr	r2, [pc, #104]	; (8000990 <GPIO_IRQInterruptConfig+0xfc>)
 8000928:	430b      	orrs	r3, r1
 800092a:	6013      	str	r3, [r2, #0]
}
 800092c:	e025      	b.n	800097a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 31 && IRQNumber < 64)
 800092e:	79fb      	ldrb	r3, [r7, #7]
 8000930:	2b1f      	cmp	r3, #31
 8000932:	d90f      	bls.n	8000954 <GPIO_IRQInterruptConfig+0xc0>
 8000934:	79fb      	ldrb	r3, [r7, #7]
 8000936:	2b3f      	cmp	r3, #63	; 0x3f
 8000938:	d80c      	bhi.n	8000954 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 800093a:	4b16      	ldr	r3, [pc, #88]	; (8000994 <GPIO_IRQInterruptConfig+0x100>)
 800093c:	681b      	ldr	r3, [r3, #0]
 800093e:	79fa      	ldrb	r2, [r7, #7]
 8000940:	f002 021f 	and.w	r2, r2, #31
 8000944:	2101      	movs	r1, #1
 8000946:	fa01 f202 	lsl.w	r2, r1, r2
 800094a:	4611      	mov	r1, r2
 800094c:	4a11      	ldr	r2, [pc, #68]	; (8000994 <GPIO_IRQInterruptConfig+0x100>)
 800094e:	430b      	orrs	r3, r1
 8000950:	6013      	str	r3, [r2, #0]
 8000952:	e012      	b.n	800097a <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber > 64 && IRQNumber < 96)
 8000954:	79fb      	ldrb	r3, [r7, #7]
 8000956:	2b40      	cmp	r3, #64	; 0x40
 8000958:	d90f      	bls.n	800097a <GPIO_IRQInterruptConfig+0xe6>
 800095a:	79fb      	ldrb	r3, [r7, #7]
 800095c:	2b5f      	cmp	r3, #95	; 0x5f
 800095e:	d80c      	bhi.n	800097a <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 8000960:	4b0d      	ldr	r3, [pc, #52]	; (8000998 <GPIO_IRQInterruptConfig+0x104>)
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	79fa      	ldrb	r2, [r7, #7]
 8000966:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800096a:	2101      	movs	r1, #1
 800096c:	fa01 f202 	lsl.w	r2, r1, r2
 8000970:	4611      	mov	r1, r2
 8000972:	4a09      	ldr	r2, [pc, #36]	; (8000998 <GPIO_IRQInterruptConfig+0x104>)
 8000974:	430b      	orrs	r3, r1
 8000976:	6013      	str	r3, [r2, #0]
}
 8000978:	e7ff      	b.n	800097a <GPIO_IRQInterruptConfig+0xe6>
 800097a:	bf00      	nop
 800097c:	370c      	adds	r7, #12
 800097e:	46bd      	mov	sp, r7
 8000980:	bc80      	pop	{r7}
 8000982:	4770      	bx	lr
 8000984:	e000e100 	.word	0xe000e100
 8000988:	e000e104 	.word	0xe000e104
 800098c:	e000e108 	.word	0xe000e108
 8000990:	e000e180 	.word	0xe000e180
 8000994:	e000e184 	.word	0xe000e184
 8000998:	e000e188 	.word	0xe000e188

0800099c <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 800099c:	b480      	push	{r7}
 800099e:	b085      	sub	sp, #20
 80009a0:	af00      	add	r7, sp, #0
 80009a2:	4603      	mov	r3, r0
 80009a4:	6039      	str	r1, [r7, #0]
 80009a6:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 80009a8:	79fb      	ldrb	r3, [r7, #7]
 80009aa:	089b      	lsrs	r3, r3, #2
 80009ac:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 80009ae:	79fb      	ldrb	r3, [r7, #7]
 80009b0:	f003 0303 	and.w	r3, r3, #3
 80009b4:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8 * iprx_section) + (8 - NO_PR_BITS_IMPLEMENTED);
 80009b6:	7bbb      	ldrb	r3, [r7, #14]
 80009b8:	00db      	lsls	r3, r3, #3
 80009ba:	b2db      	uxtb	r3, r3
 80009bc:	3304      	adds	r3, #4
 80009be:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 80009c0:	7bfb      	ldrb	r3, [r7, #15]
 80009c2:	009b      	lsls	r3, r3, #2
 80009c4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009c8:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009cc:	6819      	ldr	r1, [r3, #0]
 80009ce:	7b7b      	ldrb	r3, [r7, #13]
 80009d0:	683a      	ldr	r2, [r7, #0]
 80009d2:	409a      	lsls	r2, r3
 80009d4:	7bfb      	ldrb	r3, [r7, #15]
 80009d6:	009b      	lsls	r3, r3, #2
 80009d8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009dc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009e0:	430a      	orrs	r2, r1
 80009e2:	601a      	str	r2, [r3, #0]
}
 80009e4:	bf00      	nop
 80009e6:	3714      	adds	r7, #20
 80009e8:	46bd      	mov	sp, r7
 80009ea:	bc80      	pop	{r7}
 80009ec:	4770      	bx	lr
	...

080009f0 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 80009f0:	b480      	push	{r7}
 80009f2:	b083      	sub	sp, #12
 80009f4:	af00      	add	r7, sp, #0
 80009f6:	4603      	mov	r3, r0
 80009f8:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 80009fa:	4b0c      	ldr	r3, [pc, #48]	; (8000a2c <GPIO_IRQHandling+0x3c>)
 80009fc:	695b      	ldr	r3, [r3, #20]
 80009fe:	79fa      	ldrb	r2, [r7, #7]
 8000a00:	2101      	movs	r1, #1
 8000a02:	fa01 f202 	lsl.w	r2, r1, r2
 8000a06:	4013      	ands	r3, r2
 8000a08:	2b00      	cmp	r3, #0
 8000a0a:	d009      	beq.n	8000a20 <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= ( 1 << PinNumber);
 8000a0c:	4b07      	ldr	r3, [pc, #28]	; (8000a2c <GPIO_IRQHandling+0x3c>)
 8000a0e:	695b      	ldr	r3, [r3, #20]
 8000a10:	79fa      	ldrb	r2, [r7, #7]
 8000a12:	2101      	movs	r1, #1
 8000a14:	fa01 f202 	lsl.w	r2, r1, r2
 8000a18:	4611      	mov	r1, r2
 8000a1a:	4a04      	ldr	r2, [pc, #16]	; (8000a2c <GPIO_IRQHandling+0x3c>)
 8000a1c:	430b      	orrs	r3, r1
 8000a1e:	6153      	str	r3, [r2, #20]
	}
}
 8000a20:	bf00      	nop
 8000a22:	370c      	adds	r7, #12
 8000a24:	46bd      	mov	sp, r7
 8000a26:	bc80      	pop	{r7}
 8000a28:	4770      	bx	lr
 8000a2a:	bf00      	nop
 8000a2c:	40013c00 	.word	0x40013c00

08000a30 <__libc_init_array>:
 8000a30:	b570      	push	{r4, r5, r6, lr}
 8000a32:	4d0d      	ldr	r5, [pc, #52]	; (8000a68 <__libc_init_array+0x38>)
 8000a34:	4c0d      	ldr	r4, [pc, #52]	; (8000a6c <__libc_init_array+0x3c>)
 8000a36:	1b64      	subs	r4, r4, r5
 8000a38:	10a4      	asrs	r4, r4, #2
 8000a3a:	2600      	movs	r6, #0
 8000a3c:	42a6      	cmp	r6, r4
 8000a3e:	d109      	bne.n	8000a54 <__libc_init_array+0x24>
 8000a40:	4d0b      	ldr	r5, [pc, #44]	; (8000a70 <__libc_init_array+0x40>)
 8000a42:	4c0c      	ldr	r4, [pc, #48]	; (8000a74 <__libc_init_array+0x44>)
 8000a44:	f000 f818 	bl	8000a78 <_init>
 8000a48:	1b64      	subs	r4, r4, r5
 8000a4a:	10a4      	asrs	r4, r4, #2
 8000a4c:	2600      	movs	r6, #0
 8000a4e:	42a6      	cmp	r6, r4
 8000a50:	d105      	bne.n	8000a5e <__libc_init_array+0x2e>
 8000a52:	bd70      	pop	{r4, r5, r6, pc}
 8000a54:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a58:	4798      	blx	r3
 8000a5a:	3601      	adds	r6, #1
 8000a5c:	e7ee      	b.n	8000a3c <__libc_init_array+0xc>
 8000a5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a62:	4798      	blx	r3
 8000a64:	3601      	adds	r6, #1
 8000a66:	e7f2      	b.n	8000a4e <__libc_init_array+0x1e>
 8000a68:	08000a90 	.word	0x08000a90
 8000a6c:	08000a90 	.word	0x08000a90
 8000a70:	08000a90 	.word	0x08000a90
 8000a74:	08000a94 	.word	0x08000a94

08000a78 <_init>:
 8000a78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a7a:	bf00      	nop
 8000a7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a7e:	bc08      	pop	{r3}
 8000a80:	469e      	mov	lr, r3
 8000a82:	4770      	bx	lr

08000a84 <_fini>:
 8000a84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a86:	bf00      	nop
 8000a88:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a8a:	bc08      	pop	{r3}
 8000a8c:	469e      	mov	lr, r3
 8000a8e:	4770      	bx	lr
